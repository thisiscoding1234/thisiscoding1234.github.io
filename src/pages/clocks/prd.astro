---
const tickMarks = Array.from({ length: 60 }, (_, i) => i);
import "../../styles/clocks/prd.css";
import Analytics from "../../components/Analytics.astro";
import Mouse from "../../components/Mouse.astro";
---

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>A useful clock?</title>
    <Analytics></Analytics>
  </head>
  <body>
    <div class="main-clock" id="clk" data-cursor-icon="none">
      {
          tickMarks.map((i) => (
            <div
              class={`tick ${i % 5 === 0 ? "hour-tick" : ""}`}
              style={`transform: translate(-50%, -50%) rotate(${i * 6}deg) translateY(calc(var(--clock-size) * 0.47))`}
            />
          ))
        }
        <div class="clock-f" id="hour"></div>
        <div class="clock-f" id="minute"></div>
        <div class="clock-f" id="second"></div>
    </div>
    <div class="main-label">
      <span class="hrs1">
        <span class="lable-text" id="c1">0</span>
        <span class="lable-text" id="c2">0</span>
      </span><span class="lable-text" id="c3">:</span><span class="min1">
        <span class="lable-text" id="c4">0</span>
        <span class="lable-text" id="c5">0</span>
      </span><span class="lable-text" id="c6">:</span><span class="secs">
        <span class="lable-text" id="c7">0</span>
        <span class="lable-text" id="c8">0</span></span
      ><span class="lable-text" id="c9">:</span><span class="mill1">
        <span class="lable-text" id="c10">0</span>
        <span class="lable-text" id="c11">0</span>
        <span class="lable-text" id="c12">0</span>
        <span class="lable-text" id="c14"></span>
      </span>
    </div>
    <script
      src="https://cdn.jsdelivr.net/npm/accutime@latest/dist/accutime.min.js"
    ></script>
    <!--- https://www.npmjs.com/package/accutime --->
    <script>
      function zi(e, index) {document.getElementById(e).style.zIndex = index};
      setInterval(() => {
        const now = new Date();
        const milisRatio = now.getMilliseconds() / 1000;
        let secondsRatio = (milisRatio + now.getSeconds()) / 60;
        let minutesRatio = (secondsRatio + now.getMinutes()) / 60;
        let hoursRatio = (minutesRatio + now.getHours()) / 12;
        if (hoursRatio > 1){hoursRatio = hoursRatio - 1}
        const s = "second";
        const m = "minute";
        const h = "hour";
        let pt = 3;
        let pm = 2;
        let pb = 1;
        let sR = Number(secondsRatio);
        let mR = Number(minutesRatio);
        let hR = Number(hoursRatio);
        document.getElementById(s).style.setProperty('--a', `${secondsRatio * 100}%`);
        document.getElementById(m).style.setProperty('--a', `${minutesRatio * 100}%`);
        document.getElementById(h).style.setProperty('--a', `${hoursRatio * 100}%`);       
        if (sR > mR && mR > hR) {zi(s, pb); zi(m, pm); zi(h, pt);};
        if (sR > hR && hR > mR) {zi(s, pb); zi(h, pm); zi(m, pt);};
        if (mR > sR && sR > hR) {zi(m, pb); zi(s, pm); zi(h, pt);};
        if (mR > hR && hR > sR) {zi(m, pb); zi(h, pm); zi(s, pt);};
        if (hR > sR && sR > mR) {zi(h, pb); zi(s, pm); zi(m, pt);};
        if (hR > mR && mR > sR) {zi(h, pb); zi(m, pm); zi(s, pt);};
        if (String(now.getHours()).length === 1) {
          document.getElementById("c1").innerHTML = "0";
          document.getElementById("c2").innerHTML = String(now.getHours());
        } else {
          document.getElementById("c1").innerHTML = String(
            now.getHours(),
          ).charAt(0);
          document.getElementById("c2").innerHTML = String(
            now.getHours(),
          ).charAt(1);
        }
        if (String(now.getMinutes()).length === 1) {
          document.getElementById("c4").innerHTML = "0";
          document.getElementById("c5").innerHTML = String(now.getMinutes());
        } else {
          document.getElementById("c4").innerHTML = String(
            now.getMinutes(),
          ).charAt(0);
          document.getElementById("c5").innerHTML = String(
            now.getMinutes(),
          ).charAt(1);
        }
        if (String(now.getSeconds()).length === 1) {
          document.getElementById("c7").innerHTML = "0";
          document.getElementById("c8").innerHTML = String(now.getSeconds());
        } else {
          document.getElementById("c7").innerHTML = String(
            now.getSeconds(),
          ).charAt(0);
          document.getElementById("c8").innerHTML = String(
            now.getSeconds(),
          ).charAt(1);
        }
        if (String(now.getMilliseconds()).length === 1) {
          document.getElementById("c10").innerHTML = "0";
          document.getElementById("c11").innerHTML = "0";
          document.getElementById("c12").innerHTML = String(
            now.getMilliseconds(),
          ).charAt(0);
        } else {
          if (String(now.getMilliseconds()).length === 2) {
            document.getElementById("c10").innerHTML = "0";
            document.getElementById("c11").innerHTML = String(
              now.getMilliseconds(),
            ).charAt(0);
            document.getElementById("c12").innerHTML = String(
              now.getMilliseconds(),
            ).charAt(1);
          } else {
            document.getElementById("c10").innerHTML = String(
              now.getMilliseconds(),
            ).charAt(0);
            document.getElementById("c11").innerHTML = String(
              now.getMilliseconds(),
            ).charAt(1);
            document.getElementById("c12").innerHTML = String(
              now.getMilliseconds(),
            ).charAt(2);
          }
        }
      }, 1);
      const updatePeriod = () => {
        const tims = [[0, 0, "SOD", "white"], [8, 50, "REG", "black"], [9, 10, "P1", "red"], [9, 55, "P2", "orange"], [10, 40, "P3", "yellow"], [11, 25, "break", "black"], [11, 45, "P4", "green"], [12, 30, "P5", "blue"], [13, 15, "lunch", "black"], [14, 15, "P6", "purple"], [15, 0, "P7", "violet"], [15, 45, "EOD", "white"]];
        const now = new Date();
        for (let i = 0; i < tims.length; i++) {
          let nowMin = now.getMinutes() + now.getHours() * 60;
          let timMin = Number(tims[i][0]) * 60 + Number(tims[i][1]);
          let timMinN = (i < tims.length - 1) ? Number(tims[(i+1)][0]) * 60 + Number(tims[(i+1)][1]) : 24 * 60;
          let nowSecs = now.getSeconds();
          let timRatio = (nowMin - timMin) / (timMinN - timMin);
          let timRatioSecs = (((nowMin * 60) + nowSecs) - (timMin * 60)) / (timMinN * 60 - timMin * 60);
          let x = document.getElementById("clk");
          x.style.setProperty('--b', `${Math.abs(timRatioSecs) * 100}%`);
          x.style.setProperty('--colour', `${tims[i][3]}`);
          if (nowMin >= timMin && nowMin < timMinN) {
            document.getElementById("c14").innerHTML = String(tims[i][2]);
            document.getElementById("c14").style.color = String(tims[i][3]);
            break;
          }
        }
      };
      updatePeriod();
      setInterval(updatePeriod, 1000);
      
      zi(m, pb); zi(h, pm); zi(s, pt);
    </script>
    <Mouse></Mouse>
  </body>
</html>
